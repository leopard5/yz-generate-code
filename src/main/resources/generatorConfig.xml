<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <!-- import generator configuration file -->
    <properties resource="local.properties"/>

    <!-- Database connection driver package location -->
    <classPathEntry location="${mysql.connect.jar.url}"/>

    <!-- one database one context -->
    <context id="Mysql2tables" targetRuntime="MyBatis3">
        <commentGenerator>
            <!-- Whether to cancel the comment -->
            <property name="suppressDate" value="false"/>
            <!-- Whether to generate annotation timestamps-->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- Database link URL username and password -->
        <jdbcConnection driverClass="${mysql.connect.driver}"
                        connectionURL="${mysql.connect.url}"
                        userId="${mysql.connect.username}"
                        password="${mysql.connect.password}">
        </jdbcConnection>

        <!-- Type conversion -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.）
            该属性可以控制是否强制DECIMAL和NUMERIC类型的字段转换为Java类型的java.math.BigDecimal,默认值为false，一般不需要配置。
            默认情况下的转换规则为：
            如果精度>0或者长度>18，就会使用java.math.BigDecimal
            如果精度=0并且10<=长度<=18，就会使用java.lang.Long
            如果精度=0并且5<=长度<=9，就会使用java.lang.Integer
            如果精度=0并且长度<5，就会使用java.lang.Short
            -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成实体类地址 -->
        <javaModelGenerator targetPackage="${output.model.package}"
                            targetProject="${output.generator.project}">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径xxx.model， true:xxx.model.[schemaName] -->
            <property name="enableSubPackages" value="false"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- mapper xml file -->
        <sqlMapGenerator targetPackage="${output.mapperxml.package}"
                         targetProject="${output.generator.project}">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- mapper dao interface file -->
        <javaClientGenerator targetPackage="${output.mapper.package}"
                             targetProject="${output.generator.project}" type="XMLMAPPER">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- table config start -->

        <!--<table tableName="mmc_promotion_related" domainObjectName="PromotionRelated"-->
               <!--enableCountByExample="true" enableUpdateByExample="true"-->
               <!--enableDeleteByExample="true" enableSelectByExample="true"-->
               <!--selectByExampleQueryId="true" enableInsert="true"-->
               <!--enableUpdateByPrimaryKey="true" enableDeleteByPrimaryKey="true">-->
            <!--<generatedKey column="id" sqlStatement="select LAST_INSERT_ID()" identity="true" type="post"/>-->
        <!--</table>-->

        <table tableName="comp_retrying" domainObjectName="Retrying"
               enableCountByExample="true" enableUpdateByExample="true"
               enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true" enableInsert="true"
               enableUpdateByPrimaryKey="true" enableDeleteByPrimaryKey="true">
            <generatedKey column="id" sqlStatement="select LAST_INSERT_ID()" identity="true" type="post"/>
        </table>

        <!-- table config end  -->

        <!-- 
               schema:数据库的schema,可以使用SQL通配符匹配。如果设置了该值，生成SQL的表名会变成如schema.tableName的形式。
               tableName为对应的数据库表 
               domainObjectName:生成对象的基本名称。如果没有指定，MBG会自动根据表名来生成名称
               enable*ByExample   是否生成 example类 enableXXX:XXX代表多种SQL方法，该属性用来指定是否生成对应的XXX语句。  
        -->
        <!-- 忽略列，不生成bean 字段 -->
        <!-- <ignoreColumn column="FRED" />   -->
        <!-- 指定列的java数据类型 -->
        <!-- <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />   -->

    </context>
</generatorConfiguration>






